{"mappings":"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","sources":["src/js/03-promises.js","src/js/x-notify.js"],"sourcesContent":["import { XNotify } from './x-notify';\nconst delayField = document.querySelector('[name=\"delay\"]');\nconst delayStepField = document.querySelector('[name=\"step\"]');\nconst promiceAmountField = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\nconst Notify = new XNotify('TopRight');\n\nform.addEventListener('submit', submitHandler);\n\nfunction submitHandler(e) {\n  e.preventDefault();\n  let currentTimer = Number(delayField.value);\n  let stepDelay = Number(delayStepField.value);\n  let amount = Number(promiceAmountField.value);\n  for (let val = 1; val <= promiceAmountField.value; val++) {\n    createPromise(val, currentTimer)\n      .then(({ position, delay }) => {\n        Notify.success({\n          width: '350px',\n          title: `✅ Fulfilled promise ${position} in ${delay}ms`,\n          duration: 800,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.error({\n          width: '350px',\n          title: `❌ Rejected promise ${position} in ${delay}ms`,\n          duration: 800,\n        });\n      })\n      .finally(() => {\n        val === amount\n          ? console.log('This is the end... My only friend, the end...')\n          : null;\n      });\n\n    currentTimer += stepDelay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.5;\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n","class XNotify {\n  constructor(position) {\n    this.position = this.empty(position) ? 'TopRight' : position;\n\n    this.defaults = {\n      width: '250px',\n      borderRadius: '10px',\n      duration: 5000,\n      color: 'rgb(255,255,255)',\n      success: {\n        title: 'Success Notification',\n        description: '',\n        background: 'rgb(40,200,80)',\n      },\n      error: {\n        title: 'Error Notification',\n        description: '',\n        background: 'rgb(230,50,50)',\n      },\n      alert: {\n        title: 'Alert Notification',\n        description: '',\n        background: 'rgb(240,180,10)',\n      },\n      info: {\n        title: 'Info Notification',\n        description: '',\n        background: 'rgb(170,80,220)',\n      },\n    };\n  }\n\n  setOptions(options, type) {\n    this.width = this.empty(options.width)\n      ? this.defaults.width\n      : options.width;\n\n    this.borderRadius = this.empty(options.borderRadius)\n      ? this.defaults.borderRadius\n      : options.borderRadius;\n\n    this.title = this.empty(options.title)\n      ? this.defaults[type].title\n      : options.title;\n\n    this.description = this.empty(options.description)\n      ? this.defaults[type].description\n      : options.description;\n\n    this.duration = this.empty(options.duration)\n      ? this.defaults.duration\n      : options.duration;\n\n    this.background = this.empty(options.background)\n      ? this.defaults[type].background\n      : options.background;\n\n    this.color = this.empty(options.color)\n      ? this.defaults.color\n      : options.color;\n  }\n\n  success(options) {\n    this.setOptions(options, 'success');\n    let element = this.createElement();\n    this.showNotification(element);\n  }\n\n  error(options) {\n    this.setOptions(options, 'error');\n    let element = this.createElement();\n    this.showNotification(element);\n  }\n\n  alert(options) {\n    this.setOptions(options, 'alert');\n    let element = this.createElement();\n    this.showNotification(element);\n  }\n\n  info(options) {\n    this.setOptions(options, 'info');\n    let element = this.createElement();\n    this.showNotification(element);\n  }\n\n  createElement() {\n    if (!document.getElementById('x-notify-container')) {\n      let body = document.getElementsByTagName('body')[0];\n\n      let height = 'calc(100% - 20px)';\n      let paddingRight = '20px';\n      let paddingLeft = '0';\n      let top = '0';\n      let right = '0';\n      let bottom = 'auto';\n      let left = 'auto';\n\n      switch (this.position) {\n        case 'BottomRight':\n          height = 'auto';\n          top = 'auto';\n          bottom = '0';\n          break;\n        case 'BottomLeft':\n          height = 'auto';\n          paddingRight = '0';\n          paddingLeft = '20px';\n          top = 'auto';\n          right = 'auto';\n          bottom = '0';\n          left = '0';\n          break;\n        case 'TopLeft':\n          paddingRight = '0';\n          paddingLeft = '20px';\n          right = 'auto';\n          left = '0';\n          break;\n      }\n\n      let container = document.createElement('div');\n      container.id = 'x-notify-container';\n      container.style =\n        'position:fixed; z-index:999; width:calc(' +\n        this.width +\n        ' + 70px); height:' +\n        height +\n        '; pointer-events:none; overflow-x:hidden; overflow-y:auto; -webkit-overflow-scrolling:touch; scroll-behavior:smooth; scrollbar-width:none; padding-top:20px; padding-right:' +\n        paddingRight +\n        '; padding-left:' +\n        paddingLeft +\n        '; top:' +\n        top +\n        '; right:' +\n        right +\n        '; bottom:' +\n        bottom +\n        '; left:' +\n        left +\n        ';';\n\n      body.appendChild(container);\n    }\n\n    let align =\n      this.position === 'TopRight' || this.position === 'BottomRight'\n        ? 'right'\n        : 'left';\n\n    let row = document.createElement('div');\n    row.id = this.generateID();\n    row.style =\n      'display:block; padding:0 0 20px 0; text-align:' +\n      align +\n      '; width:100%;';\n\n    let notification = document.createElement('div');\n    notification.classList.add('x-notification');\n    notification.style =\n      'background:' +\n      this.background +\n      '; color:' +\n      this.color +\n      '; width:' +\n      this.width +\n      '; border-radius:' +\n      this.borderRadius +\n      '; padding:10px 12px 12px 12px; font-family:\"Helvetica Neue\", \"Lucida Grande\", \"Arial\", \"Verdana\", \"Tahoma\", sans-serif; display:inline-block; text-align:left; opacity:0; pointer-events:auto; -webkit-user-select:none; -khtml-user-select:none; -moz-user-select:none; -ms-user-select:none; user-select:none; outline:none;';\n\n    notification.innerHTML =\n      '<span style=\"font-size:18px; font-weight:bold; color:' +\n      this.color +\n      '; display:block; line-height:25px;\">' +\n      this.title +\n      '</span><span style=\"font-size:16px; color:' +\n      this.color +\n      '; display:block; margin-top:5px; line-height:25px;\">' +\n      this.description +\n      '</span>';\n\n    row.append(notification);\n\n    return row;\n  }\n\n  showNotification(element) {\n    let container = document.getElementById('x-notify-container');\n\n    let notification = element.getElementsByClassName('x-notification')[0];\n\n    if (this.position === 'BottomRight' || this.position === 'BottomLeft') {\n      container.append(element);\n      if (container.scrollHeight > window.innerHeight) {\n        container.style.height = 'calc(100% - 20px)';\n      }\n      container.scrollTo(0, container.scrollHeight);\n    } else {\n      container.prepend(element);\n    }\n\n    let opacity = 0.05;\n    let animation = setInterval(() => {\n      opacity += 0.05;\n      notification.style.opacity = opacity;\n      if (opacity >= 1) {\n        notification.style.opacity = 1;\n        clearInterval(animation);\n      }\n    }, 10);\n\n    setTimeout(() => {\n      this.hideNotification(element);\n    }, this.duration);\n  }\n\n  hideNotification(element) {\n    let container = document.getElementById('x-notify-container');\n\n    let notification = element.getElementsByClassName('x-notification')[0];\n\n    let opacity = 1;\n    let animation = setInterval(() => {\n      opacity -= 0.05;\n      notification.style.opacity = opacity;\n      if (opacity <= 0) {\n        element.remove();\n        clearInterval(animation);\n      }\n    }, 10);\n\n    if (container.scrollHeight <= window.innerHeight) {\n      container.style.height = 'auto';\n    }\n\n    if (this.empty(container.innerHTML)) {\n      container.remove();\n    }\n  }\n\n  clear() {\n    let container = document.getElementById('x-notify-container');\n    let notifications = container.getElementsByClassName('x-notification');\n\n    for (let i = 0; i < notifications.length; i++) {\n      this.hideNotification(notifications[i]);\n    }\n  }\n\n  generateID() {\n    let id = this.epoch() + '-' + this.shuffle(this.epoch());\n\n    if (this.empty(document.getElementById('x-notify-container').innerHTML)) {\n      return id;\n    }\n\n    let invalid = true;\n\n    while (invalid) {\n      if (document.getElementById(id)) {\n        id = this.epoch() + '-' + this.shuffle(this.epoch());\n      } else {\n        invalid = false;\n        break;\n      }\n    }\n\n    return id;\n  }\n\n  shuffle(string) {\n    let parts = string.toString().split('');\n    for (let i = parts.length; i > 0; ) {\n      let random = parseInt(Math.random() * i);\n      let temp = parts[--i];\n      parts[i] = parts[random];\n      parts[random] = temp;\n    }\n    return parts.join('');\n  }\n\n  epoch() {\n    var date = new Date();\n    var time = Math.round(date.getTime() / 1000);\n    return time;\n  }\n\n  empty(value) {\n    if (\n      value === null ||\n      typeof value === 'undefined' ||\n      value.toString().trim() === ''\n    ) {\n      return true;\n    }\n    return false;\n  }\n}\nexport { XNotify };\n"],"names":["$47d4ff9957288465$var$delayField","document","querySelector","$47d4ff9957288465$var$delayStepField","$47d4ff9957288465$var$promiceAmountField","$47d4ff9957288465$var$form","$47d4ff9957288465$var$Notify","setOptions","options","type","this","width","empty","defaults","borderRadius","title","description","duration","background","color","success","element","createElement","showNotification","error","alert","info","getElementById","body","getElementsByTagName","height","paddingRight","paddingLeft","top","right","bottom","left","position","container","id","style","appendChild","align","row","generateID","notification","classList","add","innerHTML","append","getElementsByClassName","scrollHeight","window","innerHeight","scrollTo","prepend","opacity","animation","setInterval","clearInterval","setTimeout","hideNotification","remove","clear","notifications","i","length","epoch","shuffle","invalid","string","parts","toString","split","random","parseInt","Math","temp","join","date","Date","round","getTime","value","trim","constructor","$47d4ff9957288465$var$createPromise","delay","shouldResolve","Promise","res","rej","addEventListener","e","preventDefault","currentTimer","Number","stepDelay","amount","val","then","catch","finally","console","log"],"version":3,"file":"03-promises.3028f037.js.map"}